/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as PrivateRouteImport } from './routes/_private/route'
import { Route as PrivateIndexImport } from './routes/_private/index'
import { Route as PrivatePostsIndexImport } from './routes/_private/posts/index'
import { Route as PrivatePostsPostIdImport } from './routes/_private/posts/$postId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const PrivateIndexRoute = PrivateIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivatePostsIndexRoute = PrivatePostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivatePostsPostIdRoute = PrivatePostsPostIdImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => PrivateRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateIndexImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/posts/$postId': {
      id: '/_private/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PrivatePostsPostIdImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/posts/': {
      id: '/_private/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PrivatePostsIndexImport
      parentRoute: typeof PrivateRouteImport
    }
  }
}

// Create and export the route tree

interface PrivateRouteRouteChildren {
  PrivateIndexRoute: typeof PrivateIndexRoute
  PrivatePostsPostIdRoute: typeof PrivatePostsPostIdRoute
  PrivatePostsIndexRoute: typeof PrivatePostsIndexRoute
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateIndexRoute: PrivateIndexRoute,
  PrivatePostsPostIdRoute: PrivatePostsPostIdRoute,
  PrivatePostsIndexRoute: PrivatePostsIndexRoute,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PrivateRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof PrivateIndexRoute
  '/posts/$postId': typeof PrivatePostsPostIdRoute
  '/posts': typeof PrivatePostsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof PrivateIndexRoute
  '/posts/$postId': typeof PrivatePostsPostIdRoute
  '/posts': typeof PrivatePostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_private': typeof PrivateRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_private/': typeof PrivateIndexRoute
  '/_private/posts/$postId': typeof PrivatePostsPostIdRoute
  '/_private/posts/': typeof PrivatePostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/' | '/posts/$postId' | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/' | '/posts/$postId' | '/posts'
  id:
    | '__root__'
    | '/_private'
    | '/login'
    | '/_private/'
    | '/_private/posts/$postId'
    | '/_private/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_private",
        "/login"
      ]
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/",
        "/_private/posts/$postId",
        "/_private/posts/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_private/": {
      "filePath": "_private/index.tsx",
      "parent": "/_private"
    },
    "/_private/posts/$postId": {
      "filePath": "_private/posts/$postId.tsx",
      "parent": "/_private"
    },
    "/_private/posts/": {
      "filePath": "_private/posts/index.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
